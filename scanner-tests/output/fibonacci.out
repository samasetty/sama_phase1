1 import
1 IDENTIFIER atoi
1 ;
2 import
2 IDENTIFIER exit
2 ;
3 import
3 IDENTIFIER getenv
3 ;
4 import
4 IDENTIFIER printf
4 ;
5 import
5 IDENTIFIER strcmp
5 ;
7 int
7 IDENTIFIER base_cases
7 [
7 INTLITERAL 2
7 ]
7 ;
8 int
8 IDENTIFIER memoization
8 [
8 INTLITERAL 100
8 ]
8 ;
9 bool
9 IDENTIFIER is_memoized
9 [
9 INTLITERAL 100
9 ]
9 ;
11 int
11 IDENTIFIER fib_recursive
11 (
11 int
11 IDENTIFIER n
11 )
11 {
12 if
12 (
12 IDENTIFIER n
12 ==
12 INTLITERAL 0
12 ||
12 IDENTIFIER n
12 ==
12 INTLITERAL 1
12 )
12 {
13 return
13 IDENTIFIER base_cases
13 [
13 IDENTIFIER n
13 ]
13 ;
14 }
14 else
14 {
15 int
15 IDENTIFIER l
15 ,
15 IDENTIFIER r
15 ;
16 IDENTIFIER l
16 =
16 IDENTIFIER fib_recursive
16 (
16 IDENTIFIER n
16 -
16 INTLITERAL 1
16 )
16 ;
17 IDENTIFIER r
17 =
17 IDENTIFIER fib_recursive
17 (
17 IDENTIFIER n
17 -
17 INTLITERAL 2
17 )
17 ;
18 return
18 IDENTIFIER l
18 +
18 IDENTIFIER r
18 ;
19 }
20 }
22 int
22 IDENTIFIER fib_memoized
22 (
22 int
22 IDENTIFIER n
22 )
22 {
23 if
23 (
23 IDENTIFIER is_memoized
23 [
23 IDENTIFIER n
23 ]
23 )
23 {
24 return
24 IDENTIFIER memoization
24 [
24 IDENTIFIER n
24 ]
24 ;
25 }
25 else
25 {
26 int
26 IDENTIFIER res
26 ;
27 if
27 (
27 IDENTIFIER n
27 ==
27 INTLITERAL 0
27 ||
27 IDENTIFIER n
27 ==
27 INTLITERAL 1
27 )
27 {
28 IDENTIFIER res
28 =
28 IDENTIFIER n
28 ;
29 }
29 else
29 {
30 int
30 IDENTIFIER l
30 ,
30 IDENTIFIER r
30 ;
31 IDENTIFIER l
31 =
31 IDENTIFIER fib_memoized
31 (
31 IDENTIFIER n
31 -
31 INTLITERAL 1
31 )
31 ;
32 IDENTIFIER r
32 =
32 IDENTIFIER fib_memoized
32 (
32 IDENTIFIER n
32 -
32 INTLITERAL 2
32 )
32 ;
33 IDENTIFIER res
33 =
33 IDENTIFIER l
33 +
33 IDENTIFIER r
33 ;
34 }
35 IDENTIFIER memoization
35 [
35 IDENTIFIER n
35 ]
35 =
35 IDENTIFIER res
35 ;
36 IDENTIFIER is_memoized
36 [
36 IDENTIFIER n
36 ]
36 =
36 BOOLEANLITERAL true
36 ;
37 return
37 IDENTIFIER res
37 ;
38 }
39 }
41 int
41 IDENTIFIER fib_iterative
41 (
41 int
41 IDENTIFIER n
41 )
41 {
42 int
42 IDENTIFIER a
42 ,
42 IDENTIFIER b
42 ,
42 IDENTIFIER i
42 ;
44 IDENTIFIER a
44 =
44 INTLITERAL 0
44 ;
45 IDENTIFIER b
45 =
45 INTLITERAL 1
45 ;
47 for
47 (
47 IDENTIFIER i
47 =
47 INTLITERAL 2
47 ;
47 IDENTIFIER i
47 <=
47 IDENTIFIER n
47 ;
47 IDENTIFIER i
47 ++
47 )
47 {
48 int
48 IDENTIFIER c
48 ;
49 IDENTIFIER c
49 =
49 IDENTIFIER a
49 +
49 IDENTIFIER b
49 ;
50 IDENTIFIER a
50 =
50 IDENTIFIER b
50 ;
51 IDENTIFIER b
51 =
51 IDENTIFIER c
51 ;
52 }
53 return
53 IDENTIFIER b
53 ;
54 }
56 void
56 IDENTIFIER main
56 (
56 )
56 {
57 int
57 IDENTIFIER n
57 ,
57 IDENTIFIER res
57 ,
57 IDENTIFIER tmp
57 ;
59 IDENTIFIER base_cases
59 [
59 INTLITERAL 0
59 ]
59 =
59 INTLITERAL 0
59 ;
60 IDENTIFIER base_cases
60 [
60 INTLITERAL 1
60 ]
60 =
60 INTLITERAL 1
60 ;
61 IDENTIFIER res
61 =
61 INTLITERAL 0
61 ;
63 IDENTIFIER tmp
63 =
63 IDENTIFIER getenv
63 (
63 STRINGLITERAL "FIB_N"
63 )
63 ;
64 if
64 (
64 IDENTIFIER tmp
64 ==
64 INTLITERAL 0
64 )
64 {
65 IDENTIFIER printf
65 (
65 STRINGLITERAL "FIB_N not set! Must be an integer >= 0\n"
65 )
65 ;
66 IDENTIFIER exit
66 (
66 INTLITERAL 1
66 )
66 ;
67 }
69 IDENTIFIER n
69 =
69 IDENTIFIER atoi
69 (
69 IDENTIFIER tmp
69 )
69 ;
71 IDENTIFIER tmp
71 =
71 IDENTIFIER getenv
71 (
71 STRINGLITERAL "FIB_TYPE"
71 )
71 ;
72 if
72 (
72 IDENTIFIER tmp
72 ==
72 INTLITERAL 0
72 )
72 {
73 IDENTIFIER printf
73 (
73 STRINGLITERAL "FIB_TYPE not set! Must be one of {recursive, memoized, iterative}\n"
73 )
73 ;
74 IDENTIFIER exit
74 (
74 INTLITERAL 1
74 )
74 ;
75 }
77 if
77 (
77 IDENTIFIER strcmp
77 (
77 IDENTIFIER tmp
77 ,
77 STRINGLITERAL "recursive"
77 )
77 ==
77 INTLITERAL 0
77 )
77 {
78 IDENTIFIER res
78 =
78 IDENTIFIER fib_recursive
78 (
78 IDENTIFIER n
78 )
78 ;
79 }
79 else
79 {
80 if
80 (
80 IDENTIFIER strcmp
80 (
80 IDENTIFIER tmp
80 ,
80 STRINGLITERAL "memoized"
80 )
80 ==
80 INTLITERAL 0
80 )
80 {
81 IDENTIFIER res
81 =
81 IDENTIFIER fib_memoized
81 (
81 IDENTIFIER n
81 )
81 ;
82 }
82 else
82 {
83 if
83 (
83 IDENTIFIER strcmp
83 (
83 IDENTIFIER tmp
83 ,
83 STRINGLITERAL "iterative"
83 )
83 ==
83 INTLITERAL 0
83 )
83 {
84 IDENTIFIER res
84 =
84 IDENTIFIER fib_iterative
84 (
84 IDENTIFIER n
84 )
84 ;
85 }
86 }
87 }
89 if
89 (
89 IDENTIFIER res
89 ==
89 INTLITERAL 0
89 )
89 {
90 IDENTIFIER printf
90 (
90 STRINGLITERAL "Error! No method specified\n"
90 )
90 ;
91 IDENTIFIER exit
91 (
91 INTLITERAL 1
91 )
91 ;
92 }
94 IDENTIFIER printf
94 (
94 STRINGLITERAL "fib(%d): %d\n"
94 ,
94 IDENTIFIER n
94 ,
94 IDENTIFIER res
94 )
94 ;
95 }
